services:
# Queue Services
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Web UI console
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
  
  sqs:
    image: localstack/localstack
    container_name: sqs
    command: ["sh", "-c", "/etc/localstack/init/ready.d/create-sqs-queue.sh && exec \"$@\""]
    environment:
      - SERVICES=sqs
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - "./scripts:/etc/localstack/init/ready.d"
    ports:
      - "4566:4566" # LocalStack main port (SQS, S3, etc.)
    healthcheck:
      test: ["CMD", "awslocal", "sqs", "list-queues"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Application Services
  # NestJS App - SQS Provider
  app-sqs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-sqs
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - QUEUE_PROVIDER=SQS
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ENDPOINT=http://sqs:4566
      - SQS_QUEUE_URL=http://sqs:4566/000000000000/space-messages
    depends_on:
      sqs:
        condition: service_healthy

  # NestJS App - RabbitMQ Provider
  app-rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app-rabbitmq
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - QUEUE_PROVIDER=RABBITMQ
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - RABBITMQ_QUEUE=space-messages
    depends_on:
      rabbitmq:
        condition: service_healthy